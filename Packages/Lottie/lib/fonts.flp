func fonts(timeline)
    var fonts = []
    for font in timeline.fonts
        fonts = fonts.appending(fontDictionary(from: font))
    end
    return ["list": fonts]
end

func fontDictionary(from font)
    return [
        "fName": "\(font.name)",
        "fFamily": "\(font.familyName)",
        "fStyle": lottieFontStyle(from: font.style),
        "ascent": ascent(from: font)
    ]
end

func ascent(from font)
    return font.ascender
end

func lottieFontStyle(from fontStyle)
    var styleComponents = fontStyle.components(separatedBy: " ").map(lottieStyleComponent)
    return styleComponents.joined(separator: " ")
end

func lottieStyleComponent(from styleComponent)
        switch styleComponent.lowercased()
            // Styles supported by Lottie
            case "italic":
                return "italic"
            case "bold":
                return "bold"
            case "black":
                return "black"
            case "medium":
                return "medium"
            case "regular":
                return "regular"
            case "normal":
                return "normal"
            case "light":
                return "light"
            case "thin":
                return "thin"

            // Styles converted to supported Lottie styles
            case "book":
                return "light"
            case "oblique":
                return "italic"
            case "heavy":
                return "bold"
            case "roman":
                return "regular"
            default:
                return ""
        end
end