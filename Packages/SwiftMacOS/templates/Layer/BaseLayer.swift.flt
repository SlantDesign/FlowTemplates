<%- import SwiftMacOS
if symbol == nil
  var suggestedName = snapshot.name.lowerCamelCased()
  var className = viewClassName(of: snapshot.type)
  symbol = symbolTable.addSymbolWithSuggestedName(suggestedName, type: className, context: "", id: snapshot.id)
-%>

let <%= symbol.name %> = <%= viewClassName(of: snapshot.type) %>(frame: CGRect(x: <%= snapshot.position.x %>, y: <%= snapshot.position.y %>, width: <%= snapshot.bounds.width %>, height: <%= snapshot.bounds.height %>))
<%- else -%>
<%= symbol.name %> = <%= viewClassName(of: snapshot.type) %>(frame: CGRect(x: <%= snapshot.position.x %>, y: <%= snapshot.position.y %>, width: <%= snapshot.bounds.width %>, height: <%= snapshot.bounds.height %>))
<%-
end

if snapshot.type.name != "image"
-%>
<%= symbol.name %>.backgroundColor = <%= SwiftMacOS.code(snapshot.backgroundColor, layer: snapshot) %>.cgColor
<%-
end

if snapshot.anchorPoint.x != 0.5 || snapshot.anchorPoint.y != 0.5 -%>
<%= symbol.name %>.anchorPoint = CGPoint(x: <%= snapshot.anchorPoint.x %>, y: <%= snapshot.anchorPoint.y %>)
<%-
end

if !snapshot.visible -%>
<%= symbol.name %>.opacity = 0
<%- else if snapshot.opacity != 1 -%>
<%= symbol.name %>.opacity = <%= snapshot.opacity %>
<%-
end

if snapshot.rotation.radians != 0 -%>
<%= symbol.name %>.transform = CATransform3DMakeRotation(<%= snapshot.rotation.radians / pi %> * CGFloat.pi, 0, 0, 1)
<%-
end

if snapshot.flippedHorizontal != 1 || snapshot.flippedVertical != 1 -%>
<%= symbol.name %>.transform = CATransform3DScale(CATransform3D(), <%= snapshot.flippedHorizontal %>, <%= snapshot.flippedVertical %>, 1)
<%-
end

if snapshot.shadowOffset.width != 0 || snapshot.shadowOffset.height != -3 -%>
<%= symbol.name %>.shadowOffset = <%= SwiftMacOS.code(snapshot.shadowOffset, layer: snapshot) %>
<%-
end

if snapshot.shadowRadius != 3 -%>
<%= symbol.name %>.shadowRadius = <%= snapshot.shadowRadius %>
<%-
end

if snapshot.borderWidth != 0 -%>
<%= symbol.name %>.borderWidth = <%= snapshot.borderWidth %>
<%-
end

if snapshot.borderColor != Color.black -%>
<%= symbol.name %>.borderColor = <%= SwiftMacOS.code(snapshot.borderColor, layer: snapshot) %>.cgColor
<%-
end

if snapshot.cornerRadius != 0 -%>
<%= symbol.name %>.cornerRadius = <%= snapshot.cornerRadius %>
<%-
end

-%>
<%= symbol.name %>.name = "<%= symbol.name %>"
<%= symbol.name %>.shadowColor = <%= SwiftMacOS.code(snapshot.shadowColor, layer: snapshot) %>.cgColor
<%= symbol.name %>.shadowOpacity = 1
<%= symbol.name %>.position = <%= SwiftMacOS.code(snapshot.position, layer: snapshot) %>
<%= symbol.name %>.bounds = <%= SwiftMacOS.code(snapshot.bounds, layer: snapshot) %>
<%= symbol.name %>.masksToBounds = <%= snapshot.masksToBounds %>
<%- insert("Layer/\(snapshot.type.name).swift.flt", from: SwiftMacOS, indentation: indentation) %>
