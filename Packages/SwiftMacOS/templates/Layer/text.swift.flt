<%- import SwiftMacOS -%>
<%= symbol.name %>.name = "<%= symbol.name %>"
<%= symbol.name %>.string = <% printCodeFor(string: snapshot.string, withIndentation: "            ") %>
<%= symbol.name %>.font = "<%= snapshot.font.name %>" as NSString
<%= symbol.name %>.fontSize = <%= snapshot.fontSize %>
<%= symbol.name %>.foregroundColor = <%= SwiftMacOS.code(snapshot.foregroundColor, layer: snapshot) %>.cgColor
<%= symbol.name %>.alignmentMode = .<%= snapshot.alignment.name %>
<%= symbol.name %>.truncationMode = .<%= snapshot.truncation.name  %>
<%= symbol.name %>.isWrapped = <%= snapshot.truncation.name == "none" %>
<%- if snapshot.attributedString != nil -%>
<%= symbol.name %>.string = {
    let string = <% printCodeFor(string: snapshot.attributedString.string, withIndentation: "                ") %>
    let attrString = NSMutableAttributedString(string: string)
    <%- for run in snapshot.attributedString.runs -%>
    attrString.setAttributes(<% printDictionary(run.attributes, keyPrinter: printAttrStringKey, valuePrinter: printAttrStringValue, indentation: "            ") %>, range: NSRange(location: <%= run.location %>, length: <%= run.length %>))
    <%- end -%>
    return attrString
}()
<%- end -%>
