<%
var imageFolderPath = Web.pathPrefix(relativePath: "./img", absolutePath: imageFolderAbsPath, relative: relative)
var keyvalues = track.keyvalues
// Get all the keyvalue times
var times = []
for keyvalue in keyvalues
  times = times.appending(keyvalue.time * 1000)
end

// Get all the keyvalue values
var values = []
for keyvalue in keyvalues
  var value = Web.cssValue(property: keyvalue.property, value: keyvalue.value, layer: layer, imageFolderPath: imageFolderPath, importImage: importImage)
  values = values.appending(value)
end

// Get all the keyvalue timing functions
var timingFunctions = []
for keyvalue in keyvalues.dropLast()
  var timingFunction = Web.cssTimingFunction(of: keyvalue.trailingTimingFunction).inQuotes()
  timingFunctions = timingFunctions.appending(timingFunction)
end

var propertyName = Web.jsPropertyName(property: track.property)
var querrySelector = Web.querrySelectorFor(property: track.property, timelineName: timelineName, id: id)
if propertyName != nil && propertyName != ""
%>
<%= animationName -%>() {
    let property = "<%= propertyName -%>";
    let values = <%= values %>;
    let timingFunctions = <%= timingFunctions %>;
    let times = <%= times %>;
    let element = this.rootElement.querySelector(<%= querrySelector %>)

    let <%= id %>_track = new Track(
      property,
      values,
      timingFunctions,
      times,
      element
    );

    return <%= id %>_track;
}
<%end -%> 