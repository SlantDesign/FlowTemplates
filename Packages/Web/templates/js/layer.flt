<%-
var id = Web.elementIDFor(layer: layer, symbolTable: symbolTable)
var groups = []

insert("js/transformAnimations.js.flt", from: Web, indentation: indentation)
insert("js/shadowAnimations.js.flt", from: Web, indentation: indentation)

// Border animations
groups = groupAnimationsByTiming(timeline.animationsForLayer(layer).filter(Web.animationIsForBorder))
var borderAnimationIndex = 0
for group in groups
  var animations = group.animations
  if !animations.isEmpty
    var animationName = "\(id)BorderAnimation\(borderAnimationIndex)"
    animationNames = animationNames.appending(animationName) -%>
<%= animationName %>() {
    return this.rootElement.querySelector('#<%= timelineName %> .flow-border.<%= id %>-border').animate({
<%  insert("js/layerAnimationBlock.flt", from: Web, indentation: indentation + 2) %>
    }, {
<%  insert("js/animationParameters.js.flt", from: Web, indentation: indentation + 2) %>
    });
}
<%
    borderAnimationIndex = borderAnimationIndex + 1
  end
end

// Gradient animations
groups = groupAnimationsByTiming(timeline.animationsFor(layer: layer, property: "fillGradient"))
var gradientAnimationIndex = 0
for group in groups
  for animation in group.animations
    for i in 0 ..< animation.from.stops.count
      var animationName = "\(id)GradientAnimation\(gradientAnimationIndex)"
      animationNames = animationNames.appending(animationName) -%>
<%= animationName %>() {
    return this.rootElement.querySelector('#<%= timelineName %> .<%= id %>-svg .stop<%= i %>').animate({
        stopColor: ['<%= animation.from.stops[i].color.hex %>', '<%= animation.to.stops[i].color.hex %>'],
    }, {
<%    insert("js/animationParameters.js.flt", from: Web, indentation: indentation + 2) %>
    });
}
<%
      gradientAnimationIndex = gradientAnimationIndex + 1
    end
  end
end

insert("js/contentsGravityAnimations.js.flt", from: Web, indentation: 0)

// General animations
for track in timeline.tracksForLayer(layer.layer)
  if Web.propertyIsForRoot(track.property) || Web.propertyIsForShape(track.property)
    var animationName = "\(id)_\(track.property.name.snakeCased())"
    animationNames = animationNames.appending(animationName) -%>
    <% insert("js/track.js.flt", from: Web, indentation: indentation) %>
  <%- end
end %>