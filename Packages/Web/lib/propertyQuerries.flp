/// Determines if a property is for the root div.
func propertyIsForRoot(_ property)
  return
    property.id != "borderWidth" &&
    property.id != "borderColor" &&
    property.layerType != "shape" &&
    !propertyIsNotAnimated(property) &&
    !propertyIsForShadow(property)
end

func propertyIsForShape(_ property)
  return property.layerType == "shape"
end

func propertyIsNotForShape(_ property)
  return property.layerType != "shape"
end

// Choosing not to animate these properties
// because we can not control them independently
// which will result in inconsistent behaviour.
func propertyIsNotAnimated(_ property)
  return
    property.id == "transform.scale.x" ||
    property.id == "transform.scale.y" ||
    property.id == "anchorPoint.x" ||
    property.id == "anchorPoint.y"
end

func propertyIsForBorder(_ property)
  return
    property.id == "borderWidth" ||
    property.id == "borderColor" ||
    property.id == "cornerRadius"
end

func propertyIsForShadow(_ property)
  return
    property.id == "shadowOffset.width" ||
    property.id == "shadowOffset.height" ||
    property.id == "shadowColor" ||
    property.id == "shadowRadius"
end

func propertyIsForFillImage(_ property)
  return property.id == "fillImage"
end

// Querry Selector

func querrySelectorFor(property, timelineName, id)
  if property.id == "fillGradient"
    return "`${this.elementID} .\(id)-svg .stop"
  else if propertyIsForShape(property)
    return "`${this.elementID} .\(id)-svg`"
  else if propertyIsForBorder(property)
      return "`${this.elementID} .flow-border.\(id)-border`"
  else if propertyIsForRoot(property)
    return "`${this.elementID} .\(id)`"
  end
end

// Animation

func animationIsForShapeProperty(_ animation)
  return propertyIsForShape(animation.property)
end

func animationIsNotForShapeProperty(_ animation)
  return propertyIsNotForShape(animation.property)
end

func animationIsForTransform(_ animation)
  return propertyIsNotAnimated(animation.property)
end

func animationIsForBorder(_ animation)
  return propertyIsForBorder(animation.property)
end

func animationIsForShadow(_ animation)
  return propertyIsForShadow(animation.property)
end

func groupContainsShapeProperty(_ group)
  return group.animations.contains(animationIsForShapeProperty)
end

func groupContainsNonShapeProperty(_ group)
  return group.animations.contains(animationIsNotForShapeProperty)
end