<%
/// Input: timeline, layer, property
var pathTrack = timeline.trackFor(layer: layer, property: property)
if pathTrack != nil
  var values = []
  var keytimes = []
  for keyvalue in pathTrack.keyvaluesWithSimulatedSteps
    var size = timeline.value(property: "size", layer: layer.layer, time: keyvalue.time)
    keytimes = keytimes.appending(keyvalue.time / timeline.duration)
    values = values.appending(keyvalue.value.svgc(size: size))
  end

  var keysplines = []
  for animation in pathTrack.animationsFromKeyvaluesWithSimulatedSteps
    var c1 = animation.timingFunction.controlPoints[0]
    var c2 = animation.timingFunction.controlPoints[1]
    keysplines = keysplines.appending("\(c1.x) \(c1.y) \(c2.x) \(c2.y)")
  end
-%>
<animate
  attributeName="d"
  values="<%= values.joined(separator: ";") %>"
  dur="<%= timeline.duration %>s"
  fill="freeze"
  calcMode="spline"
  keyTimes="<%= keytimes.joined(separator: ";") %>"
  keySplines="<%= keysplines.joined(separator: ";") %>"
/>
<%
end
-%>
